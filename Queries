select * from customer 
select * from sales
select * from model
select * from employee

-- Create a list of employees and their immiediate managers
-- In this query, we will be using a self join, since all information needed is in this table
select 
e.firstName, e.lastName, e.title,
m.firstName as Mangers_FirstName,
m.lastName as Managers_LastName,
m.title
from employee e inner join employee m 
on e.managerId = m.employeeId;

-- List of Salepeople with zero sales
-- A left join is used 
select e.firstName, e.lastName,
e.title,e.startDate, s.salesAmount
from employee e 
left join 
sales s 
on e.employeeId = s.employeeId
where e.title = 'Sales Person' and s.salesAmount is NULL

-- list all customers and their sales even if some data is gone
select * 
from customer c 
full outer join sales s 
on c.customerId = s.customerId


-- Another solution using Union
select * 
from customer c
inner join sales s
on c.customerId = s.customerId
UNION
select * 
from customer c
left join sales s 
on c.customerId = s.customerId
where s.salesId is NULL
UNION
select * 
from sales s
left join customer c 
on s.customerId = c.customerId
where email is null

-- How many cars have been sold per employees
select e.employeeId,e.firstName, e.lastName, 
count(s.salesId)as NumberOfSoldCars
from employee e inner join sales s 
on e.employeeId = s.employeeId
group by 1,2
order by NumberOfSoldCars DESC



-- The least and most expensive car sold by each employees in year 2023
select e.employeeId, e.firstName,s.inventoryId,s.soldDate,
s.salesAmount, rank() over(partition by e.employeeId order by s.salesAmount)as rank
from employee e inner join sales s 
on e.employeeId = s.employeeId
where s.soldDate like '2023%'
group by 1,2,3,4

select e.employeeId, e.firstName,e.lastName,
max(s.salesAmount) as max, 
min(s.salesAmount) as min
from sales s inner join  employee e
on s.employeeId = e.employeeId
where s.soldDate like '2023%'
group by 1,2,3

-- Employees who sold more than 5 cars in 2023
SELECT employeeId,firstName, lastName,
NumberOfSoldCars 
from
(select e.employeeId,e.firstName, e.lastName, 
count(s.salesId)as NumberOfSoldCars
from employee e inner join sales s 
on e.employeeId = s.employeeId
where s.soldDate like '2023%'
group by 1,2
order by NumberOfSoldCars DESC)
where 
NumberOfSoldCars >= 5

-- with the min and max stats using the having clause instead of sub query

select e.employeeId, e.firstName,count(*) as CarsSold,
max(s.salesAmount) as max, 
min(s.salesAmount) as min
from sales s inner join  employee e
on s.employeeId = e.employeeId
where s.soldDate like '2023%'
group by 1,2
having count(*) >= 5 
order by CarsSold DESC

-- Total sales per year
select strftime('%Y',soldDate) as year, 
format("$%.2f",sum(salesAmount)) as TotalSales from sales
group by strftime('%Y',soldDate)

-- The amount sale per employee for each month in 2021

select e.employeeId,e.firstName,
sum(case 
  when strftime('%m', soldDate) = '01'
  then salesAmount end) as 'JanSales',
sum(case
  when strftime('%m', soldDate) = '02'
  then salesAmount end) as'FebSales',
sum(case 
  when strftime('%m', soldDate) = '03'
  then salesAmount end) as 'MarSales',
sum(case 
  when strftime('%m', soldDate) = '04'
  then salesAmount end) as 'AprSales',
sum(case 
  when strftime('%m', soldDate) = '05'
  then salesAmount end) as 'MaySales',
sum(case
when strftime('%m', soldDate) = '06'
then salesAmount end) as 'JuneSales',
sum(case 
when strftime('%m', soldDate) = '07'
then salesAmount end) as 'JulSales',
sum(case 
when strftime('%m', soldDate) = '08'
then salesAmount end) as 'AugSales',
sum(case 
when strftime('%m', soldDate) = '09'
then salesAmount end) as 'SeptSales',
sum(case 
  when strftime('%m', soldDate) = '10'
  then salesAmount end) as 'OctSales',
sum(case 
  when strftime('%m', soldDate) = '11'
  then salesAmount end) as 'NovSales',
sum(case
  when strftime('%m', soldDate) = '12'
  then salesAmount end) as 'DecSales'
from sales s inner join employee e 
on s.employeeId = e.employeeId
where s.soldDate >= '2021-01-01'
and s.soldDate < '2022-01-01'
group by 1,2
order by 1,2

-- All sales where the cars purchased are electric

select m.modelId, i.inventoryId, s.salesId, s.soldDate
from inventory i inner join model m 
on i.modelId = m.modelId 
inner join sales s on i.inventoryId = s.inventoryId
where m.EngineType = 'Electric'

-- Another approach for the above query
select i.inventoryId, s.salesId, s.salesAmount,s.soldDate
from sales s inner join inventory i 
on s.inventoryId = i.inventoryId
where i.modelId in(
select modelId from model 
where EngineType = 'Electric')

-- List all sales person with rank of the car models they've sold the most

with cte as(
select e.employeeId, e.firstName, m.model, count(*),
 rank() over(partition by e.employeeId order by count(m.model) DESC) as rank
 from employee e inner join sales s 
 on e.employeeId = s.employeeId
 inner join inventory i
 on s.inventoryId = i.inventoryId
 inner join model m
on i.modelId = m.modelId
where e.title = 'Sales Person'
group by 1,2,3)

select employeeId,firstName, model
from cte where rank = 1

-- Sales report showing total sales per month and an annual running total
with cte as (
select strftime('%Y', soldDate) as year,
strftime('%m', soldDate) as months,
sum(salesAmount) as TotalSales
from sales
group by 1,2)

select year, months,TotalSales,
sum(TotalSales)over(partition by year order by months) as runningtotals
from cte

-- Report showing the number of cars cold this month and last month

select strftime('%Y-%m', soldDate) as SalesMonth,
count(salesId) as NumCarsSold,
lag(count(salesId),1,0) over(order by strftime('%Y-%m', soldDate))as CarsSoldLastMonth
from sales
group by 1



